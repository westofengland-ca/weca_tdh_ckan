version: "3"

volumes:
  ckan_storage:
  pg_data:
  solr_data:

networks:
    ckan-network:
        driver: bridge

services:
  ckan-job:
    container_name: ckan-job
    build:
      context: ../
      dockerfile: docker/ckan/Dockerfile.dev
      args:
        - TZ=${TZ}
    env_file:
      - .env.job.dev
    depends_on:
      ckan-dev:
        condition: service_healthy
    volumes:
      - ckan_storage:/var/lib/ckan
      - ../:/srv/app/src_extensions/ckanext-weca-tdh

  ckan-dev:
    container_name: ${CKAN_CONTAINER_NAME}
    build:
      context: ../
      dockerfile: docker/ckan/Dockerfile.dev
      args:
        - TZ=${TZ}
    env_file:
      - .env.dev
    depends_on:
      db:
        condition: service_healthy
      solr:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "0.0.0.0:${CKAN_PORT_HOST}:${CKAN_PORT}"
    volumes:
      - ckan_storage:/var/lib/ckan
      - ../:/srv/app/src_extensions/ckanext-weca-tdh
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:5000"]
    networks:
      - ckan-network

  db:
    container_name: ${POSTGRESQL_CONTAINER_NAME}
    build:
      context: postgresql/
      args:
        - DATASTORE_READONLY_PASSWORD=${DATASTORE_READONLY_PASSWORD}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    environment:
      - DATASTORE_READONLY_PASSWORD=${DATASTORE_READONLY_PASSWORD}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/db
    ports:
      - "0.0.0.0:5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "ckan"]
    networks:
      - ckan-network

  solr:
    container_name: ${SOLR_CONTAINER_NAME}
    image: ckan/ckan-solr:${SOLR_IMAGE_VERSION}
    volumes:
      - solr_data:/var/solr
    restart: unless-stopped
    ports: 
      - "0.0.0.0:8983:8983"
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:8983/solr/"]
    networks:
      - ckan-network

  redis:
    container_name: ${REDIS_CONTAINER_NAME}
    image: redis:${REDIS_VERSION}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-e", "QUIT"]
    networks:
      - ckan-network

  smtp4dev:
    container_name: smtp4dev
    image: rnwood/smtp4dev
    restart: unless-stopped
    ports:
      - "3000:80"
      - "25:25"
    networks:
      - ckan-network

  datapusher:
    container_name: ${DATAPUSHER_CONTAINER_NAME}
    image: ckan/ckan-base-datapusher:${DATAPUSHER_VERSION}
    restart: unless-stopped
    ports: 
      - "0.0.0.0:8800:8800"
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:8800"]
    networks:
      - ckan-network
