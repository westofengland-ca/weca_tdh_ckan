trigger: none
  # branches:
  #   include:
  #     - main
pool:
  name: Azure Pipelines

variables:
- name: buildDate
  value: $[format('{0:yyyyMMdd}', pipeline.startTime)]
- name: ckantag
  value: mca_tdh_ckan
- name: buildtag
  value: ado-$(ckantag)_dkr-$(buildDate).$(Build.BuildId)
- name: group_id
  value: 1
- name: group_name
  value: Pipeline_vars
- name: organization_name
  value: westofengland-ca
- name: project_name
  value: weca-tdh
- group: Pipeline_vars

steps:
- task: Docker@2
  displayName: Build and push
  inputs:
    containerRegistry: $(ACR_SERVICE_CONNECTION)
    repository: $(NAMESPACE)/$(CKAN_IMAGE_NAME)
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
    buildContext: 'ckanext-weca-tdh'
    tags: $(buildtag)
    arguments: --no-cache

- script: mkdir -p $(Build.ArtifactStagingDirectory)/$(NAMESPACE)
  displayName: 'Create Directory'

- task: Docker@2
  displayName: Save an image
  inputs:
    repository: $(NAMESPACE)/$(CKAN_IMAGE_NAME)
    command: 'save'
    arguments: '-o $(Build.ArtifactStagingDirectory)/$(NAMESPACE)/$(CKAN_IMAGE_NAME).image.tar $(AZURE_CONTAINER_REGISTRY).azurecr.io/$(NAMESPACE)/$(CKAN_IMAGE_NAME):$(buildtag)'
  
- task: AzureContainerApps@1
  displayName: Update revision
  inputs:
    connectedServiceNameARM: $(ARM_SERVICE_CONNECTION)
    containerAppName: $(CONTAINER_APP_NAME)
    resourceGroup: $(CONTAINER_APP_RESOURCE_GROUP)
    imageToDeploy: $(AZURE_CONTAINER_REGISTRY).azurecr.io/$(NAMESPACE)/$(CKAN_IMAGE_NAME):$(buildtag)

- task: AzureCLI@2
  displayName: Update ckan build version tag
  inputs:
    azureSubscription: $(ARM_SERVICE_CONNECTION)
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
     az containerapp update --resource-group $(CONTAINER_APP_RESOURCE_GROUP) --name $(CONTAINER_APP_NAME) --set-env-vars ''TDH_BUILD_VERSION=$(buildtag)
    
- task: AzureCLI@2
  displayName: Update index rebuild job
  inputs:
    azureSubscription: $(ARM_SERVICE_CONNECTION)
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
     az containerapp job update --name $(DEV_CKAN_INDEX_REBUILD_JOB_NAME) --resource-group $(CONTAINER_APP_RESOURCE_GROUP) --image $(AZURE_CONTAINER_REGISTRY).azurecr.io/$(NAMESPACE)/$(CKAN_IMAGE_NAME):$(buildtag) 

- task: PublishBuildArtifacts@1
  displayName: Publish artifacts
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'ckan-build'
    publishLocation: 'Container'
  # Update image tag variable which is passed to the release pipeline
- powershell: |
    # Base64-encodes the Personal Access Token (PAT) appropriately 
    $base64AuthInfo = [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes(("{0}:{1}" -f "", "$(PAT)")))
    
    $url = "https://dev.azure.com/$(organization_name)/$(project_name)/_apis/distributedtask/variablegroups/$(group_id)?api-version=5.0-preview.1"
    
    $json = '{"type":"Vsts","name":"$(group_name)","variables":{"imagetag":{"isSecret":false,"value":"$(buildtag)"}}}'   
    $pipeline = Invoke-RestMethod -Uri $url -Method Put -Body $json -ContentType "application/json" -Headers @{Authorization=("Basic {0}" -f $base64AuthInfo)}
  displayName: 'Run PowerShell Script'
